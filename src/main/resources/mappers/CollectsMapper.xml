<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poets.dao.CollectsMapper">
  <resultMap id="BaseResultMap" type="com.poets.pojo.Collects">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="poet_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_canceled" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, poet_id, user_id, type, is_canceled
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collects
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collects
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.poets.pojo.Collects">
    insert into collects (id, poet_id, user_id, 
      type, is_canceled)
    values (#{id,jdbcType=INTEGER}, #{poetId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{isCanceled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.poets.pojo.Collects">
    insert into collects
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="poetId != null">
        poet_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="isCanceled != null">
        is_canceled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="poetId != null">
        #{poetId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="isCanceled != null">
        #{isCanceled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poets.pojo.Collects">
    update collects
    <set>
      <if test="poetId != null">
        poet_id = #{poetId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="isCanceled != null">
        is_canceled = #{isCanceled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poets.pojo.Collects">
    update collects
    set poet_id = #{poetId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      is_canceled = #{isCanceled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>